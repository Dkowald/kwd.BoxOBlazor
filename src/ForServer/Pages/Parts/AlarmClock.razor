@inject AppState state;
@implements IDisposable
<p>
    Current time : @Current
</p>
<p>
    Server up-time : @Uptime
</p>

@code {
    private string Current;
    private string Uptime;

    protected override void OnInitialized()
    {
        state.UpTimeChanged += Refresh;
    }

    #region IDisposable
    public void Dispose()
    {
        state.UpTimeChanged -= Refresh;
    }
    #endregion

    private void Refresh()
    {
        Current = state.ServerTime.ToString();
        Uptime = state.UpTime.ToString();
        //ignoring task result. todo: consider how to log an error.
        InvokeAsync(StateHasChanged);
    }
}
